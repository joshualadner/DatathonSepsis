/* SAS code summary:1. assign itemid's to drug names (ne, adh, epi, etc)2. remove duplicate hospital admissions entries resulting from multiple ICD codes (there are multiple ICD codes per hostpial admission)3. convert vertical data into horizontal data (each row represents 1 icustay)4. exclude patients who received dopa, dobutamine or phenylephine5. merge with comorbidity data*/*import final data here;proc import datafile="C:\Users\Iny\Desktop\Datathon\data_drugs_death_v3.csv"out=data_drugs_deathdbms=csv replace;run;*add drug names;data data_raw2;format drug $10. discharge_location $20. date date8.;set data_drugs_death;*assign drug names;drug="ADH"; *levophed is included in here;if itemid=221906 then drug="NE";if itemid=221289 then drug = "EPI";if itemid=221662 then drug = "DOPA";if itemid=221653 then drug = "DOBUTA";if itemid=221749 then drug = "PHENYL";year=input(substr(intime,1,4),4.); month=input(substr(intime,6,7),2.); day=input(substr(intime,9,10),2.); date=mdy(month,day,year);***********add additional drugs to exclude here;dead=0;if discharge_location="DEAD/EXPIRED" then dead=1;drop deathtime discharge_location;run;*check: # of unique hospital admissions;proc sort data=data_raw2 out=data_unique_hadm nodupkey; by hadm_id; run; *4955 unique hospital admissions;*check: how many icustays for each drug;proc means data=data_raw2 n;class drug;var icustay_id;run;*create data set without duplicate hospital admissions with multiple icd codes;proc sort data=data_raw2 out=data_nodup_icustay dupout=data_dups_icustay nodupkey; by subject_id hadm_id icustay_id itemid; run; *21574 --> 10919 (hospital admission has multiple icd codes);*icustay_id with NE;data data_ne;set data_nodup_icustay;where drug="NE";ne=1;ne_dose=volume;ne_rate=rate;run;*icustay_id with ADH;data data_adh;set data_nodup_icustay;where drug="ADH";adh=1;adh_dose=volume;adh_rate=rate;run;*icustay_id with EPI;data data_epi;set data_nodup_icustay;where drug="EPI";epi=1;run;*icustay_id with DOPA;data data_dopa;set data_nodup_icustay;where drug="DOPA";dopa=1;run;*icustay_id with DOBUTA;data data_dobuta;set data_nodup_icustay;where drug="DOBUTA";dobuta=1;run;*icustay_id with PHENYL;data data_phenyl;set data_nodup_icustay;where drug="PHENYL";phenyl=1;run;*********add data step here;proc sort data=data_ne; by icustay_id; run;proc sort data=data_adh; by icustay_id; run;proc sort data=data_epi; by icustay_id; run;proc sort data=data_dopa; by icustay_id; run;proc sort data=data_dobuta; by icustay_id; run;proc sort data=data_phenyl; by icustay_id; run;**********add additional individual drug data set to exclude created here;data data_v3; format treatment $10.;merge data_ne data_adh data_epi data_dopa data_dobuta data_phenyl;by icustay_id;if ne=. then ne=0;if adh=. then adh=0;if epi=. then epi=0;if dopa=. then dopa=0;if dobuta=. then dobuta=0;if phenyl=. then phenyl=0;*****add more statements here;adh_ne=0; adh_only=0; ne_only=0;if (adh=1) and (ne=1) then adh_ne=1;if (adh=1) and (ne=0) then adh_only=1;if (adh=0) and (ne=1) then ne_only=1;n=_n_;if ne_only=1 then treatment="NE only";if adh_only=1 then treatment="ADH only";if adh_ne=1 then treatment="ADH + NE";*******update this exclusion list;if (epi=1) or (dopa=1) or (dobuta=1) or (phenyl=1) then delete;run;*get rid of duplicate ICU stay entries;proc sort data=data_v3 out=data_v4 nodupkey;by hadm_id icustay_id;run; *910;*check: tabulate how many had multiple icu stays;proc means data=data_v4 nway noprint;class hadm_id;var n;output out=summary n=/autoname;run;data summary2;set summary;if _FREQ_ >1;n=_N_;run;proc means data=summary2 n;class _FREQ_;var n;run; *44 have 2 ICU stays, 1 have 3 ICU stays, 1 have 4 ICU stays;*test data;data test;set data_v4;if hadm_id in (100659);run;*keeps only the first ICU stay;proc sort data=data_v4;by hadm_id date;run; *need to check that the first ICU stay number is the first ICU stay;proc sort data=data_v4 out=data_v5 dupout=data_v4_dups nodupkey;by hadm_id;run; *1437;*test whether only the first icu stay was kept;data test2;set data_v5;if hadm_id in (100659);run; *merge with comorbidities;proc import datafile="C:\Users\Iny\Desktop\Datathon\Elixhauser.csv"out=data_comorbdbms=csv replace;run;proc sort data=data_comorb; by hadm_id;run;proc sort data=data_v5; by hadm_id;run;data data_v6;merge data_v5 (in=in2) data_comorb;by hadm_id;if in2;run;proc export data=data_v6outfile="C:\Users\Iny\Desktop\Datathon\data_sepsis_2008-2013.csv"dbms=csv replace;run;/*****************************************************************************************************/*												tabulate how many deaths							 ;/*****************************************************************************************************/proc freq data=data_v6;  tables dead treatment dead*treatment;run;/*****************************************************************************************************/*												logistic regression									 ;/*****************************************************************************************************/proc logistic data=data_v6 descending; where ne_rate <14;  class treatment / param=ref ;  model dead = treatment elixhauser_hospital;run;/*****************************************************************************************************/*												mean dose / dose rate								 ;/*****************************************************************************************************/proc means data=data_v6 mean median q1 q3; where ne_rate<14;class treatment;var adh_dose adh_rate ne_dose ne_rate;run;proc sort data=data_raw2 out=list_drug_rate_unit nodupkey;by drug rateuom;run;proc univariate data=data_v6;var ne_rate;run;